# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-26 13:27
from __future__ import unicode_literals

import colorful.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('confabulation', '0002_auto_20170326_0120'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color_code', colorful.fields.RGBColorField()),
            ],
        ),
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_range', models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='StoryInTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StoryToStoryConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_range', models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeInChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Chain')),
            ],
        ),
        migrations.CreateModel(
            name='Transscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text_eng', models.CharField(blank=True, max_length=10000, null=True)),
                ('text_hu', models.CharField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='storyconnection',
            name='story',
        ),
        migrations.RemoveField(
            model_name='subject',
            name='themes',
        ),
        migrations.RemoveField(
            model_name='themeconnection',
            name='story',
        ),
        migrations.RemoveField(
            model_name='photo',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='photo',
            name='file',
        ),
        migrations.RemoveField(
            model_name='photo',
            name='order_in_recording',
        ),
        migrations.RemoveField(
            model_name='recording',
            name='photos',
        ),
        migrations.RemoveField(
            model_name='recording',
            name='stories',
        ),
        migrations.RemoveField(
            model_name='story',
            name='connections',
        ),
        migrations.RemoveField(
            model_name='story',
            name='emotions',
        ),
        migrations.RemoveField(
            model_name='story',
            name='framing',
        ),
        migrations.RemoveField(
            model_name='story',
            name='interactions',
        ),
        migrations.RemoveField(
            model_name='story',
            name='transscribe_eng',
        ),
        migrations.RemoveField(
            model_name='story',
            name='transscribe_hu',
        ),
        migrations.RemoveField(
            model_name='theme',
            name='name',
        ),
        migrations.RemoveField(
            model_name='theme',
            name='photos',
        ),
        migrations.AddField(
            model_name='photo',
            name='file_path',
            field=models.FilePathField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='photo',
            name='file_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recording',
            name='duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='story',
            name='order_in_recording',
            field=models.IntegerField(blank=True, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='story',
            name='recording',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='confabulation.Recording'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='theme',
            name='connection_range',
            field=models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], default='intraconnection', max_length=30),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='recording',
            name='data_collection_circumstances',
            field=models.CharField(blank=True, max_length=2000, null=True),
        ),
        migrations.AlterField(
            model_name='recording',
            name='sound_recording',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='story',
            name='analysis_points',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='confabulation.AnalysisPoint'),
        ),
        migrations.AlterField(
            model_name='story',
            name='video_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('analysispoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='confabulation.AnalysisPoint')),
                ('types', models.CharField(choices=[(b'Negative', b'negative'), (b'Positive', b'positive')], max_length=50)),
            ],
            bases=('confabulation.analysispoint',),
        ),
        migrations.CreateModel(
            name='Confabulation',
            fields=[
                ('analysispoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='confabulation.AnalysisPoint')),
                ('type', models.CharField(choices=[(b'Confabulation', b'confabulation'), (b'Partial Confabulation', b'partial_confabulation')], max_length=50)),
            ],
            bases=('confabulation.analysispoint',),
        ),
        migrations.CreateModel(
            name='Emotions',
            fields=[
                ('analysispoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='confabulation.AnalysisPoint')),
                ('types', models.CharField(choices=[(b'Conflicted', b'conflicted'), (b'Emotional', b'emotional'), (b'Traumatic', b'traumatic')], max_length=50)),
            ],
            bases=('confabulation.analysispoint',),
        ),
        migrations.CreateModel(
            name='Framing',
            fields=[
                ('analysispoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='confabulation.AnalysisPoint')),
                ('types', models.CharField(choices=[(b'Gray Matter', b'gray_matter'), (b'Identification', b'identification'), (b'Not sure it is true', b'not_sure_it_is_true')], max_length=50)),
            ],
            bases=('confabulation.analysispoint',),
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('analysispoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='confabulation.AnalysisPoint')),
                ('type', models.CharField(choices=[(b'analyze', b'analyze'), (b'blocks', b'block'), (b'Not respond to trigger question', b'not_respond_to_trigger'), (b'Respond to trigger question', b'respond_to_trigger')], max_length=50)),
            ],
            bases=('confabulation.analysispoint',),
        ),
        migrations.DeleteModel(
            name='StoryConnection',
        ),
        migrations.DeleteModel(
            name='Subject',
        ),
        migrations.DeleteModel(
            name='ThemeConnection',
        ),
        migrations.AddField(
            model_name='themeinchain',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Theme'),
        ),
        migrations.AddField(
            model_name='storytostoryconnection',
            name='story1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story1', to='confabulation.Story'),
        ),
        migrations.AddField(
            model_name='storytostoryconnection',
            name='story2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story2', to='confabulation.Story'),
        ),
        migrations.AddField(
            model_name='storyintheme',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Story'),
        ),
        migrations.AddField(
            model_name='storyintheme',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Theme'),
        ),
        migrations.AddField(
            model_name='chain',
            name='themes',
            field=models.ManyToManyField(through='confabulation.ThemeInChain', to='confabulation.Theme'),
        ),
        migrations.AddField(
            model_name='story',
            name='transscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='confabulation.Transscription'),
        ),
        migrations.AddField(
            model_name='theme',
            name='stories',
            field=models.ManyToManyField(through='confabulation.StoryInTheme', to='confabulation.Story'),
        ),
    ]
